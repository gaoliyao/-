       1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ,  9 

  { { 171, 141, 131, 121, 111, 122, 132, 142, 172 } , 0

  {  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0  } ,   1

  {  0 , 151,  0 ,  0 ,  0 ,  0 ,  0 , 152,  0  } ,   2     

  { 161,  0 , 162,  0 , 163,  0 , 164,  0 , 165 } ,   3

  {  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0  } ,   4

  {  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0  } ,   5

  {  61,  0 ,  62,  0 ,  63,  0 ,  64,  0 ,  65 } ,   6
   
  {  0 ,  51,  0 ,  0 ,  0 ,  0 ,  0 ,  52,  0  } ,   7

  {  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0  } ,   8

  {  71,  41,  31,  21,  11,  22,  32,  42,  72 } };  9

  { { 171, 141, 131, 121, 111, 122, 132, 142, 172 },{ 0,0,0,0,0,0,0,0,0} ,{ 0,151,0,0,0,0,0,152,0 } ,
        { 161,0,162,0,163,0,164,0,165} , { 0,0,0,0,0,0,0,0,0}, { 0,0,0,0,0,0,0,0,0}, { 61,0,62,0,63,0,64,0,65},
        { 0,51,0,0,0,0,0,52,0}, { 0,0,0,0,0,0,0,0,0}, { 71,41,31,21,11,22,32,42,72} };




		
            
            /************************向上移动*********************************/
            if (y - 1 > 6)
            {
                if (phase.board[x, y - 1] == 0)
                {
                    phase.board[x, y] = 0;
                    phase.board[x, y - 1] = current;
                    moves.Add(phase);
                }
                else
                {
                    if (phase.board[x, y] / 100 == opponent)                 //吃子
                    {
                        phase.board[x, y] = 0;
                        phase.board[x, y - 1] = current;
                        moves.Add(phase);
                    }
                }
            }
            /************************************************************/

            /************************向下移动*********************************/
            if (y + 1 < 10)
            {
                if (phase.board[x, y + 1] == 0)
                {
                    phase.board[x, y] = 0;
                    phase.board[x, y - 1] = current;
                    moves.Add(phase);
                }
                else
                {
                    if (phase.board[x, y] / 100 == opponent)                 //吃子
                    {
                        phase.board[x, y] = 0;
                        phase.board[x, y + 1] = current;
                        moves.Add(phase);
                    }
                }
            }
            /************************************************************/

            /************************向左移动*********************************/
            if (x - 1 > 3)
            {
                if (phase.board[x - 1, y] == 0)
                {
                    phase.board[x, y] = 0;
                    phase.board[x - 1, y] = current;
                    moves.Add(phase);
                }
                else
                {
                    if (phase.board[x - 1, y] / 100 == opponent)                 //吃子
                    {
                        phase.board[x, y] = 0;
                        phase.board[x - 1, y] = current;
                        moves.Add(phase);
                    }
                }
            }
            /************************************************************/

            /************************向右移动*********************************/
            if (x + 1 < 7)
            {
                if (phase.board[x + 1, y] == 0)
                {
                    phase.board[x, y] = 0;
                    phase.board[x + 1, y] = current;
                    moves.Add(phase);
                }
                else
                {
                    if (phase.board[x + 1, y] / 100 == opponent)                 //吃子
                    {
                        phase.board[x, y] = 0;
                        phase.board[x + 1, y] = current;
                        moves.Add(phase);
                    }
                }
            }
            /************************************************************/